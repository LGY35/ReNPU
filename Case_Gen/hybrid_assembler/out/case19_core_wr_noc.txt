0000005B next_fetch_is_npu

00000073 next_fetch_is_cpu

00000012 NOC_cfg ( addr=0 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 绝对寻址
01000012 NOC_cfg ( addr=1 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     #
02000012 NOC_cfg ( addr=2 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 多节点读合并关 当一起读的时候开，不一起读的时候关 ==============
03000012 NOC_cfg ( addr=3 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 片外读取
04000012 NOC_cfg ( addr=4 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 pingpang 关
05000012 NOC_cfg ( addr=5 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 目标节点
06000012 NOC_cfg ( addr=6 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # ping基地址 ==============
07005012 NOC_cfg ( addr=7 , wdata=80, cfifo_wdata=0,cfifo_en=0 )     # pang 基地址作为base addr b
08000012 NOC_cfg ( addr=8 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # gap0
09000012 NOC_cfg ( addr=9 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # gap1
0A000012 NOC_cfg ( addr=10 , wdata=0, cfifo_wdata=0,cfifo_en=0 )    # gap2
0B000112 NOC_cfg ( addr=11 , wdata=1, cfifo_wdata=0,cfifo_en=0 )    # gap3
0C000012 NOC_cfg ( addr=12 , wdata=0, cfifo_wdata=0,cfifo_en=0 )    # lenth0
0D000012 NOC_cfg ( addr=13 , wdata=0, cfifo_wdata=0,cfifo_en=0 )    # lenth1
0E000012 NOC_cfg ( addr=14 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # lenth2
0F002712 NOC_cfg ( addr=15 , wdata=39, cfifo_wdata=0,cfifo_en=0)   # loop lenth 640/8 = 80, 取一半40
10000012 NOC_cfg ( addr=16 , wdata=0, cfifo_wdata=0,cfifo_en=0)
11031F12 NOC_cfg ( addr=17 , wdata=799, cfifo_wdata=0,cfifo_en=0)   # ping lenth = 总长度20*40=800
12000012 NOC_cfg ( addr=18 , wdata=0, cfifo_wdata=0,cfifo_en=0)     #
13000012 NOC_cfg ( addr=19 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # 广播的范围 north_id, east_id, south_id, west_id centernode==============
14000012 NOC_cfg ( addr=20 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # 同步的目标 ==============
15000012 NOC_cfg ( addr=21 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # weight ==============
1D002712 NOC_cfg ( addr=29 , wdata=39, cfifo_wdata=0,cfifo_en=0 )   # 单行长度
1E014112 NOC_cfg ( addr=30 , wdata=321, cfifo_wdata=0,cfifo_en=0)     # dmaloop gap # gap2整行，也就是160  然后最低位是enable为1，所以160*2+1=321
1F000A12 NOC_cfg ( addr=31 , wdata=10, cfifo_wdata=0,cfifo_en=0 )   # dmaloop num    20/2
40000090 MQ_cfg1(sub_gap=1, sys_gap_ext=0b00000)
00837591 npu_load (we=wr,l1b_mode=norm ,tcache_bank_num=0,sys_gap=221,sub_gap=1,sub_len=36,addr=0,sys_len=16,mv_last_dis=0,cfifo_en=0,bar=0) //load_weight
08000017 noc_req (comd_type=4, bar=0 )
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000012 NOC_cfg ( addr=0 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 绝对寻址
01000012 NOC_cfg ( addr=1 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     #
02000012 NOC_cfg ( addr=2 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 多节点读合并关 当一起读的时候开，不一起读的时候关 ==============
03000012 NOC_cfg ( addr=3 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 片外读取
04000012 NOC_cfg ( addr=4 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 0 pingpang 关
05000012 NOC_cfg ( addr=5 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # 目标节点
06002812 NOC_cfg ( addr=6 , wdata=40, cfifo_wdata=0,cfifo_en=0 )     # ping基地址 ==============
07007812 NOC_cfg ( addr=7 , wdata=120, cfifo_wdata=0,cfifo_en=0 )     # pang 基地址作为base addr b
08000012 NOC_cfg ( addr=8 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # gap0
09000012 NOC_cfg ( addr=9 , wdata=0, cfifo_wdata=0,cfifo_en=0 )     # gap1
0A000012 NOC_cfg ( addr=10 , wdata=0, cfifo_wdata=0,cfifo_en=0 )    # gap2
0B000112 NOC_cfg ( addr=11 , wdata=1, cfifo_wdata=0,cfifo_en=0 )    # gap3
0C000012 NOC_cfg ( addr=12 , wdata=0, cfifo_wdata=0,cfifo_en=0 )    # lenth0
0D000012 NOC_cfg ( addr=13 , wdata=0, cfifo_wdata=0,cfifo_en=0 )    # lenth1
0E000012 NOC_cfg ( addr=14 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # lenth2
0F002712 NOC_cfg ( addr=15 , wdata=39, cfifo_wdata=0,cfifo_en=0)   # loop lenth 640/8 = 80, 取一半40
10000012 NOC_cfg ( addr=16 , wdata=0, cfifo_wdata=0,cfifo_en=0)
11031F12 NOC_cfg ( addr=17 , wdata=799, cfifo_wdata=0,cfifo_en=0)   # ping lenth = 总长度20*40=800
12000012 NOC_cfg ( addr=18 , wdata=0, cfifo_wdata=0,cfifo_en=0)     #
13000012 NOC_cfg ( addr=19 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # 广播的范围 north_id, east_id, south_id, west_id centernode==============
14000012 NOC_cfg ( addr=20 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # 同步的目标 ==============
15000012 NOC_cfg ( addr=21 , wdata=0, cfifo_wdata=0,cfifo_en=0)     # weight ==============
1D002712 NOC_cfg ( addr=29 , wdata=39, cfifo_wdata=0,cfifo_en=0 )   # 单行长度
1E014112 NOC_cfg ( addr=30 , wdata=321, cfifo_wdata=0,cfifo_en=0)     # dmaloop gap # gap2整行，也就是160  然后最低位是enable为1，所以160*2+1=321
1F000A12 NOC_cfg ( addr=31 , wdata=10, cfifo_wdata=0,cfifo_en=0 )   # dmaloop num    20/2
08000017 noc_req (comd_type=4, bar=0 )
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000119 MQ_NOP (bar=0, nop_cycle_num=1)
00000073 next_fetch_is_cpu
10500073 wfi

